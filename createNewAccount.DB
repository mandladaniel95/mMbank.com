const mongoose = require('mongoose');

const customerSchema = new mongoose.Schema({
  customerId: {
    type: String,
    required: true,
    unique: true,
  },
  name: {
    type: String,
    required: true,
  },
  email: {
    type: String,
    required: true,
    unique: true,
  },
  phone: {
    type: String,
    required: true,
  },
  address: {
    type: String,
  },
  accountStatus: {
    type: String,
    enum: ['active', 'inactive'],
    default: 'active',
  },
  accounts: [
    {
      type: mongoose.Schema.Types.ObjectId,
      ref: 'Account',
    },
  ],
  transactions: [
    {
      type: mongoose.Schema.Types.ObjectId,
      ref: 'Transaction',
    },
  ],
});

const Customer = mongoose.model('Customer', customerSchema);

module.exports = Customer;


const customer = new Customer({
  customerId: 'CUS123',
  name: 'Mandla mamba',
  email: 'mandladaniel95@example.com',
  phone: '0724609546',
  address: '196 Main St',
});

customer.save((err) => {
  if (err) {
    console.error(err);
  } else {
    console.log('Customer saved successfully');
  }
});


app.post('/create-customer', async (req, res) => {
  try {
    const { customerId, name, email, phone, address } = req.body;
    const newCustomer = new Customer({
      customerId,
      name,
      email,
      phone,
      address,
    });
    await newCustomer.save();
    res.json({ success: true });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Failed to create customer' });
  }
});

app.get('/get-customer', async (req, res) => {
  try {
    const customer = await Customer.findOne({ customerId: req.query.customerId });
    res.json({ success: true, customer });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Failed to get customer' });
  }
});