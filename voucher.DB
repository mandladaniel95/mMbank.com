const mongoose = require('mongoose');

const voucherSchema = new mongoose.Schema({
  voucherCode: {
    type: String,
    required: true,
    unique: true,
  },
  voucherType: {
    type: String,
    enum: ['Discount', 'Free Product', 'Cashback'],
  },
  discountAmount: {
    type: Number,
  },
  freeProduct: {
    type: String,
  },
  cashbackAmount: {
    type: Number,
  },
  expirationDate: {
    type: Date,
    required: true,
  },
  isActive: {
    type: Boolean,
    default: true,
  },
});

const Voucher = mongoose.model('Voucher', voucherSchema);

async function createVoucher(voucherData) {
  try {
    const voucher = new Voucher(voucherData);
    await voucher.save();
    return { success: true };
  } catch (error) {
    console.error(error);
    return { error: 'Failed to create voucher' };
  }
}

async function getVouchers() {
  try {
    const vouchers = await Voucher.find();
    return vouchers;
  } catch (error) {
    console.error(error);
    return { error: 'Failed to get vouchers' };
  }
}

async function getVoucher(voucherCode) {
  try {
    const voucher = await Voucher.findOne({ voucherCode });
    if (!voucher) {
      return { error: 'Voucher not found' };
    }
    return voucher;
  } catch (error) {
    console.error(error);
    return { error: 'Failed to get voucher' };
  }
}

async function updateVoucher(voucherCode, updates) {
  try {
    const voucher = await Voucher.findOneAndUpdate({ voucherCode }, updates, {
      new: true,
    });
    if (!voucher) {
      return { error: 'Voucher not found' };
    }
    return { success: true };
  } catch (error) {
    console.error(error);
    return { error: 'Failed to update voucher' };
  }
}

async function deactivateVoucher(voucherCode) {
  try {
    const voucher = await Voucher.findOneAndUpdate({ voucherCode }, { isActive: false }, {
      new: true,
    });
    if (!voucher) {
      return { error: 'Voucher not found' };
    }
    return { success: true };
  } catch (error) {
    console.error(error);
    return { error: 'Failed to deactivate voucher' };
  }
}

