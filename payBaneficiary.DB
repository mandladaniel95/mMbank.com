const beneficiarySchema = new mongoose.Schema({
  beneficiaryId: {
    type: String,
    required: true,
    unique: true,
  },
  accountNumber: {
    type: String,
    required: true,
  },
  accountName: {
    type: String,
    required: true,
  },
  bankName: {
    type: String,
    required: true,
  },
  branchName: {
    type: String,
  },
  beneficiaryType: {
    type: String,
    enum: ['Own Account', 'Other Bank', 'Same Bank'],
  },
});

const Beneficiary = mongoose.model('Beneficiary', beneficiarySchema);

async function addBeneficiary(beneficiaryData) {
  try {
    const beneficiary = new Beneficiary(beneficiaryData);
    await beneficiary.save();
    return { success: true };
  } catch (error) {
    console.error(error);
    return { error: 'Failed to add beneficiary' };
  }
}

async function getBeneficiaries() {
  try {
    const beneficiaries = await Beneficiary.find();
    return beneficiaries;
  } catch (error) {
    console.error(error);
    return { error: 'Failed to get beneficiaries' };
  }
}

async function getBeneficiary(beneficiaryId) {
  try {
    const beneficiary = await Beneficiary.findOne({ beneficiaryId });
    if (!beneficiary) {
      return { error: 'Beneficiary not found' };
    }
    return beneficiary;
  } catch (error) {
    console.error(error);
    return { error: 'Failed to get beneficiary' };
  }
}

async function updateBeneficiary(beneficiaryId, updates) {
  try {
    const beneficiary = await Beneficiary.findOneAndUpdate({ beneficiaryId }, updates, {
      new: true,
    });
    if (!beneficiary) {
      return { error: 'Beneficiary not found' };
    }
    return { success: true };
  } catch (error) {
    console.error(error);
    return { error: 'Failed to update beneficiary' };
  }
}

async function deleteBeneficiary(beneficiaryId) {
  try {
    const beneficiary = await Beneficiary.findOneAndDelete({ beneficiaryId });
    if (!beneficiary) {
      return { error: 'Beneficiary not found' };
    }
    return { success: true };
  } catch (error) {
    console.error(error);
    return { error: 'Failed to delete beneficiary' };
  }
}

